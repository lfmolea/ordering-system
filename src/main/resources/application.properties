server.port=8085
server.servlet.context-path=/customer
#spring.thymeleaf.cache=false

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
# Username and password
spring.datasource.username=postgres
spring.datasource.password=admin

#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


# ===============================
# = JPA / HIBERNATE
# ===============================
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5


# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS



spring.mail.host=smtp.gmail.com
spring.mail.username=lfmolea@gmail.com
spring.mail.password=ThendoPattie02
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
support.email=lfmolea@gmail.com
